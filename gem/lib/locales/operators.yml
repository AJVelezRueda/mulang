en:
  mulang:
    inspection:
      UsesAnd: '%{binding} %{must} use <code>%{operator_And}</code>'
      UsesBackwardComposition: '%{binding} %{must} use <code>%{operator_BackwardComposition}</code>'
      UsesBitwiseAnd: '%{binding} %{must} use <code>%{operator_BitwiseAnd}</code>'
      UsesBitwiseLeftShift: '%{binding} %{must} use <code>%{operator_BitwiseLeftShift}</code>'
      UsesBitwiseOr: '%{binding} %{must} use <code>%{operator_BitwiseOr}</code>'
      UsesBitwiseRightShift: '%{binding} %{must} use <code>%{operator_BitwiseRightShift}</code>'
      UsesBitwiseXor: '%{binding} %{must} use <code>%{operator_BitwiseXor}</code>'
      UsesDivide: '%{binding} %{must} use <code>%{operator_Divide}</code>'
      UsesEqual: '%{binding} %{must} use <code>%{operator_Equal}</code>'
      UsesForwardComposition: '%{binding} %{must} use <code>%{operator_ForwardComposition}</code>'
      UsesGreatherOrEqualThan: '%{binding} %{must} use <code>%{operator_GreatherOrEqualThan}</code>'
      UsesGreatherThan: '%{binding} %{must} use <code>%{operator_GreatherThan}</code>'
      UsesHash: '%{binding} %{must} use <code>%{operator_Hash}</code>'
      UsesLessOrEqualThan: '%{binding} %{must} use <code>%{operator_LessOrEqualThan}</code>'
      UsesLessThan: '%{binding} %{must} use <code>%{operator_LessThan}</code>'
      UsesMinus: '%{binding} %{must} use <code>%{operator_Minus}</code>'
      UsesModulo: '%{binding} %{must} use <code>%{operator_Modulo}</code>'
      UsesMultiply: '%{binding} %{must} use <code>%{operator_Multiply}</code>'
      UsesNegation: '%{binding} %{must} use <code>%{operator_Negation}</code>'
      UsesNotEqual: '%{binding} %{must} use <code>%{operator_NotEqual}</code>'
      UsesOr: '%{binding} %{must} use <code>%{operator_Or}</code>'
      UsesOtherwise: '%{binding} %{must} use <code>%{operator_Otherwise}</code>'
      UsesPlus: '%{binding} %{must} use <code>%{operator_Plus}</code>'
es:
  mulang:
    inspection:
      UsesAnd: '%{binding} %{must} utilizar <code>%{operator_And}</code>'
      UsesBackwardComposition: '%{binding} %{must} utilizar <code>%{operator_BackwardComposition}</code>'
      UsesBitwiseAnd: '%{binding} %{must} utilizar <code>%{operator_BitwiseAnd}</code>'
      UsesBitwiseLeftShift: '%{binding} %{must} utilizar <code>%{operator_BitwiseLeftShift}</code>'
      UsesBitwiseOr: '%{binding} %{must} utilizar <code>%{operator_BitwiseOr}</code>'
      UsesBitwiseRightShift: '%{binding} %{must} utilizar <code>%{operator_BitwiseRightShift}</code>'
      UsesBitwiseXor: '%{binding} %{must} utilizar <code>%{operator_BitwiseXor}</code>'
      UsesDivide: '%{binding} %{must} utilizar <code>%{operator_Divide}</code>'
      UsesEqual: '%{binding} %{must} utilizar <code>%{operator_Equal}</code>'
      UsesForwardComposition: '%{binding} %{must} utilizar <code>%{operator_ForwardComposition}</code>'
      UsesGreatherOrEqualThan: '%{binding} %{must} utilizar <code>%{operator_GreatherOrEqualThan}</code>'
      UsesGreatherThan: '%{binding} %{must} utilizar <code>%{operator_GreatherThan}</code>'
      UsesHash: '%{binding} %{must} utilizar <code>%{operator_Hash}</code>'
      UsesLessOrEqualThan: '%{binding} %{must} utilizar <code>%{operator_LessOrEqualThan}</code>'
      UsesLessThan: '%{binding} %{must} utilizar <code>%{operator_LessThan}</code>'
      UsesMinus: '%{binding} %{must} utilizar <code>%{operator_Minus}</code>'
      UsesModulo: '%{binding} %{must} utilizar <code>%{operator_Modulo}</code>'
      UsesMultiply: '%{binding} %{must} utilizar <code>%{operator_Multiply}</code>'
      UsesNegation: '%{binding} %{must} utilizar <code>%{operator_Negation}</code>'
      UsesNotEqual: '%{binding} %{must} utilizar <code>%{operator_NotEqual}</code>'
      UsesOr: '%{binding} %{must} utilizar <code>%{operator_Or}</code>'
      UsesOtherwise: '%{binding} %{must} utilizar <code>%{operator_Otherwise}</code>'
      UsesPlus: '%{binding} %{must} utilizar <code>%{operator_Plus}</code>'
pt:
  mulang:
    inspection:
      UsesAnd: '%{binding} %{must} utilizar <code>%{operator_And}</code>'
      UsesBackwardComposition: '%{binding} %{must} utilizar <code>%{operator_BackwardComposition}</code>'
      UsesBitwiseAnd: '%{binding} %{must} utilizar <code>%{operator_BitwiseAnd}</code>'
      UsesBitwiseLeftShift: '%{binding} %{must} utilizar <code>%{operator_BitwiseLeftShift}</code>'
      UsesBitwiseOr: '%{binding} %{must} utilizar <code>%{operator_BitwiseOr}</code>'
      UsesBitwiseRightShift: '%{binding} %{must} utilizar <code>%{operator_BitwiseRightShift}</code>'
      UsesBitwiseXor: '%{binding} %{must} utilizar <code>%{operator_BitwiseXor}</code>'
      UsesDivide: '%{binding} %{must} utilizar <code>%{operator_Divide}</code>'
      UsesEqual: '%{binding} %{must} utilizar <code>%{operator_Equal}</code>'
      UsesForwardComposition: '%{binding} %{must} utilizar <code>%{operator_ForwardComposition}</code>'
      UsesGreatherOrEqualThan: '%{binding} %{must} utilizar <code>%{operator_GreatherOrEqualThan}</code>'
      UsesGreatherThan: '%{binding} %{must} utilizar <code>%{operator_GreatherThan}</code>'
      UsesHash: '%{binding} %{must} utilizar <code>%{operator_Hash}</code>'
      UsesLessOrEqualThan: '%{binding} %{must} utilizar <code>%{operator_LessOrEqualThan}</code>'
      UsesLessThan: '%{binding} %{must} utilizar <code>%{operator_LessThan}</code>'
      UsesMinus: '%{binding} %{must} utilizar <code>%{operator_Minus}</code>'
      UsesModulo: '%{binding} %{must} utilizar <code>%{operator_Modulo}</code>'
      UsesMultiply: '%{binding} %{must} utilizar <code>%{operator_Multiply}</code>'
      UsesNegation: '%{binding} %{must} utilizar <code>%{operator_Negation}</code>'
      UsesNotEqual: '%{binding} %{must} utilizar <code>%{operator_NotEqual}</code>'
      UsesOr: '%{binding} %{must} utilizar <code>%{operator_Or}</code>'
      UsesOtherwise: '%{binding} %{must} utilizar <code>%{operator_Otherwise}</code>'
      UsesPlus: '%{binding} %{must} utilizar <code>%{operator_Plus}</code>'
